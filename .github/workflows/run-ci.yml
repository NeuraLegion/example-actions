name: CI

on:
  push:
    branches:
    - crawler
    - har-file
    - swagger
  pull_request:
    branches: [ main ]

jobs:
  start_and_wait_scan:
    runs-on: ubuntu-latest
    name: A job to run a Nexploit scan
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt update
          sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo apt-get install nodejs npm
          sudo npm install -g @neuralegion/nexploit-cli
      - name: Save environment variables
        run: |
          printf "NEXPLOIT_TOKEN=${{ secrets.NEXPLOIT_TOKEN }}\nREPEATER=${{ secrets.REPEATER }}\n" > .env
          cat .env
      - name: Docker-Compose
        run: |
          sudo docker-compose --env-file=.env up -d
          sudo docker-compose config
      - run: sleep 10s
      - name: Start Nexploit Scan üèÅ
        id: start
        run: |
          FILE_ID=$(nexploit-cli archive:upload   \
            --token ${{ secrets.NEXPLOIT_TOKEN }} \
            --discard true                        \
            ./juice-shop.har)
          SCAN_ID=$(nexploit-cli scan:run                                                 \
            --test dom_xss                                                                \
            --name "ü•§ Juice-Shop for a '${GITHUB_REF##*/}' branch #${GITHUB_RUN_NUMBER}" \
            --archive $FILE_ID                                                            \
            --repeater ${{ secrets.REPEATER }}                                            \
            --token ${{ secrets.NEXPLOIT_TOKEN }})
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
      - name: Get the output scan url üîó
        run: |
          printf "Scan was started with ID https://nexploit.app/scans/$SCAN_ID"
      - name: Wait for issues ‚è≥
        run: |
          nexploit-cli scan:polling               \
            --interval 30s                        \
            --timeout 20m                         \
            --token ${{ secrets.NEXPLOIT_TOKEN }} \
            --breakpoint high_issue $SCAN_ID
      - name: Stop Scan üõë
        continue-on-error: true
        if: ${{ always() }}
        run: nexploit-cli scan:stop --token ${{ secrets.NEXPLOIT_TOKEN }} $SCAN_ID
